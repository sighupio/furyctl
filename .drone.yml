# Copyright (c) 2017-present SIGHUP s.r.l All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

kind: pipeline
type: docker
name: main

volumes:
  - name: mise-cache
    host:
      path: /root/mise_data_dir

steps:
  - name: install-tools
    image: quay.io/sighup/mise:v2025.4.4
    pull: always
    depends_on:
      - clone
    environment:
      MISE_DATA_DIR: /mise-data
    volumes:
      - name: mise-cache
        path: /mise-data
    commands:
      - |
        # Debug and fix environment variables for Go backend
        echo "=== Pre-fix environment ==="
        echo "GOBIN: $GOBIN"
        echo "GOARCH: $GOARCH" 
        echo "System arch: $(uname -m)"
        
        # Unset problematic variables
        unset GOBIN
        unset GOARCH  # Let Go detect architecture automatically
        
        # Install tools
        mise install
        eval "$(mise activate bash --shims)"

  - name: prepare
    image: quay.io/sighup/mise:v2025.4.4
    pull: always
    depends_on:
      - install-tools
    commands:
      - eval "$(mise activate bash --shims)"
      - mkdir -p .go/cache .go/modcache .go/tmp
      - mise run mod-download
    environment:
      MISE_DATA_DIR: /mise-data
      CGO_ENABLED: 0
      GOCACHE: /drone/src/.go/cache
      GOMODCACHE: /drone/src/.go/modcache
      GOTMPDIR: /drone/src/.go/tmp
    volumes:
      - name: mise-cache
        path: /mise-data

  - name: license
    image: quay.io/sighup/mise:v2025.4.4
    pull: always
    depends_on:
      - prepare
    commands:
      - eval "$(mise activate bash --shims)"
      - mise run license-check
    environment:
      MISE_DATA_DIR: /mise-data
      CGO_ENABLED: 0
      GOCACHE: /drone/src/.go/cache
      GOMODCACHE: /drone/src/.go/modcache
      GOTMPDIR: /drone/src/.go/tmp
    volumes:
      - name: mise-cache
        path: /mise-data

  - name: lint
    image: quay.io/sighup/mise:v2025.4.4
    pull: always
    depends_on:
      - prepare
    commands:
      - eval "$(mise activate bash --shims)"
      - mise run lint
    environment:
      MISE_DATA_DIR: /mise-data
      CGO_ENABLED: 0
      GOCACHE: /drone/src/.go/cache
      GOMODCACHE: /drone/src/.go/modcache
      GOTMPDIR: /drone/src/.go/tmp
    volumes:
      - name: mise-cache
        path: /mise-data

  - name: test-unit
    image: quay.io/sighup/mise:v2025.4.4
    pull: always
    depends_on:
      - prepare
    commands:
      - eval "$(mise activate bash --shims)"
      - mise run test-unit
    environment:
      MISE_DATA_DIR: /mise-data
      CGO_ENABLED: 0
      GOCACHE: /drone/src/.go/cache
      GOMODCACHE: /drone/src/.go/modcache
      GOTMPDIR: /drone/src/.go/tmp
    volumes:
      - name: mise-cache
        path: /mise-data

  - name: test-integration
    image: quay.io/sighup/mise:v2025.4.4
    pull: always
    depends_on:
      - prepare
    commands:
      - eval "$(mise activate bash --shims)"
      - echo $${NETRC_FILE} > /root/.netrc
      - mise run test-integration
    environment:
      MISE_DATA_DIR: /mise-data
      CGO_ENABLED: 0
      GOCACHE: /drone/src/.go/cache
      GOMODCACHE: /drone/src/.go/modcache
      GOTMPDIR: /drone/src/.go/tmp
      NETRC_FILE:
        from_secret: NETRC_FILE
    volumes:
      - name: mise-cache
        path: /mise-data

  - name: test-e2e
    image: quay.io/sighup/mise:v2025.4.4
    pull: always
    depends_on:
      - prepare
    commands:
      - eval "$(mise activate bash --shims)"
      # Setup SSH
      - mkdir -p /root/.ssh
      - echo "$${GITHUB_SSH}" | tr -d '\r' | sed -e '$a\' > /root/.ssh/id_rsa
      - echo $${NETRC_FILE} > /root/.netrc
      - chmod 600 /root/.ssh/id_rsa
      - touch /root/.ssh/known_hosts
      - chmod 600 /root/.ssh/known_hosts
      - mkdir -p /etc/ssh
      - ssh-keyscan -H github.com > /etc/ssh/ssh_known_hosts 2> /dev/null
      # Create required s3 bucket if it doesn't exist
      - (test ! $(aws s3api get-bucket-location --bucket $${TERRAFORM_TF_STATES_BUCKET_NAME} --output text --no-cli-pager 2>/dev/null | grep "$${AWS_DEFAULT_REGION}")) && aws s3 mb s3://$${TERRAFORM_TF_STATES_BUCKET_NAME} --region $${AWS_DEFAULT_REGION}
      # Run tests
      - mise run test-e2e
      # Check if the e2e left the directory dirty.
      - "[ -z \"$(git status -s)\" ] || (echo 'Dirty git repository! Check the e2e tests: they are probably leaving some garbage.' && exit 1)"
    environment:
      MISE_DATA_DIR: /mise-data
      CGO_ENABLED: 0
      GOCACHE: /drone/src/.go/cache
      GOMODCACHE: /drone/src/.go/modcache
      GOTMPDIR: /drone/src/.go/tmp
      AWSCLI_VERSION: 2.15.17
      AWS_ACCESS_KEY_ID:
        from_secret: AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY:
        from_secret: AWS_SECRET_ACCESS_KEY
      AWS_DEFAULT_REGION:
        from_secret: AWS_REGION
      FURYCTL_MIXPANEL_TOKEN:
        from_secret: FURYCTL_MIXPANEL_TOKEN
      NETRC_FILE:
        from_secret: NETRC_FILE
      GITHUB_SSH:
        from_secret: GITHUB_SSH
      TERRAFORM_TF_STATES_BUCKET_NAME:
        from_secret: TERRAFORM_TF_STATES_BUCKET_NAME
    volumes:
      - name: mise-cache
        path: /mise-data

  - name: build
    image: quay.io/sighup/mise:v2025.4.4
    pull: always
    depends_on:
      - lint
      - test-unit
      - test-integration
      - test-e2e
    commands:
      - eval "$(mise activate bash --shims)"
      - git reset --hard
      - git fetch --tags
      - mise run build
    when:
      ref:
        exclude:
          - refs/tags/v**
    environment:
      MISE_DATA_DIR: /mise-data
      CGO_ENABLED: 0
      GOCACHE: /drone/src/.go/cache
      GOMODCACHE: /drone/src/.go/modcache
      GOTMPDIR: /drone/src/.go/tmp
      FURYCTL_MIXPANEL_TOKEN:
        from_secret: FURYCTL_MIXPANEL_TOKEN
      GITHUB_TOKEN:
        from_secret: GITHUB_TOKEN
    volumes:
      - name: mise-cache
        path: /mise-data

  - name: build-release
    image: quay.io/sighup/mise:v2025.4.4
    pull: always
    depends_on:
      - lint
      - test-unit
      - test-integration
      - test-e2e
    commands:
      - eval "$(mise activate bash --shims)"
      - git reset --hard
      - git fetch --tags
      - mise run release
    when:
      ref:
        include:
          - refs/tags/v**
    environment:
      MISE_DATA_DIR: /mise-data
      CGO_ENABLED: 0
      GOCACHE: /drone/src/.go/cache
      GOMODCACHE: /drone/src/.go/modcache
      GOTMPDIR: /drone/src/.go/tmp
      FURYCTL_MIXPANEL_TOKEN:
        from_secret: FURYCTL_MIXPANEL_TOKEN
      GITHUB_TOKEN:
        from_secret: GITHUB_TOKEN
    volumes:
      - name: mise-cache
        path: /mise-data

trigger:
  event:
    exclude:
      - pull_request
      - promote
