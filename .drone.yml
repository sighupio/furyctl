# Copyright (c) 2017-present SIGHUP s.r.l All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

kind: pipeline
type: docker
name: main

steps:
  - name: prepare
    image: quay.io/sighup/golang:1.23.2
    pull: always
    depends_on:
      - clone
    commands:
      - mkdir -p .go/cache .go/modcache .go/tmp
      - go mod download
    environment:
      CGO_ENABLED: 0
      GOCACHE: /drone/src/.go/cache
      GOMODCACHE: /drone/src/.go/modcache
      GOTMPDIR: /drone/src/.go/tmp

  - name: license
    image: quay.io/sighup/golang:1.23.2
    pull: always
    depends_on:
      - prepare
    commands:
      - make license-check
    environment:
      CGO_ENABLED: 0
      GOCACHE: /drone/src/.go/cache
      GOMODCACHE: /drone/src/.go/modcache
      GOTMPDIR: /drone/src/.go/tmp

  - name: lint
    image: quay.io/sighup/golang:1.23.2
    pull: always
    depends_on:
      - prepare
    commands:
      - make lint
    environment:
      CGO_ENABLED: 0
      GOCACHE: /drone/src/.go/cache
      GOMODCACHE: /drone/src/.go/modcache
      GOTMPDIR: /drone/src/.go/tmp

  - name: test-unit
    image: quay.io/sighup/golang:1.23.2
    pull: always
    depends_on:
      - prepare
    commands:
      - make test-unit
    environment:
      CGO_ENABLED: 0
      GOCACHE: /drone/src/.go/cache
      GOMODCACHE: /drone/src/.go/modcache
      GOTMPDIR: /drone/src/.go/tmp

  - name: test-integration
    image: quay.io/sighup/golang:1.23.2
    pull: always
    depends_on:
      - prepare
    commands:
      - echo $${NETRC_FILE} > /root/.netrc
      - make test-integration
    environment:
      CGO_ENABLED: 0
      GOCACHE: /drone/src/.go/cache
      GOMODCACHE: /drone/src/.go/modcache
      GOTMPDIR: /drone/src/.go/tmp
      NETRC_FILE:
        from_secret: NETRC_FILE

  - name: test-e2e
    image: debian:bookworm-slim # using debian to install aws-cli as go:1.22.0 images have issues with aws-cli
    depends_on:
      - prepare
    commands:
      - apt update
      - apt install -y curl git make ssh unzip
      # Install Golang & deps
      - curl -sL https://go.dev/dl/go1.23.2.linux-amd64.tar.gz -o go1.23.2.tar.gz
      - rm -rf /usr/local/go && tar -C /usr/local -xzf go1.23.2.tar.gz
      - echo 'export PATH=$$PATH:/usr/local/go/bin:/root/go/bin' >> /etc/profile
      - export PATH=$$PATH:/usr/local/go/bin:/root/go/bin
      - go install github.com/onsi/ginkgo/v2/ginkgo@v2.15.0
      # Install aws-cli
      - curl -sL https://awscli.amazonaws.com/awscli-exe-linux-x86_64-$${AWSCLI_VERSION}.zip -o awscliv2.zip
      - unzip awscliv2.zip
      - aws/install
      - rm -rf aws/
      # Setup SSH
      - mkdir -p /root/.ssh
      - echo "$${GITHUB_SSH}" | tr -d '\r' | sed -e '$a\' > /root/.ssh/id_rsa
      - echo $${NETRC_FILE} > /root/.netrc
      - chmod 600 /root/.ssh/id_rsa
      - touch /root/.ssh/known_hosts
      - chmod 600 /root/.ssh/known_hosts
      - mkdir -p /etc/ssh
      - ssh-keyscan -H github.com > /etc/ssh/ssh_known_hosts 2> /dev/null
      # Create required s3 bucket if it doesn't exist
      - (test ! $(aws s3api get-bucket-location --bucket $${TERRAFORM_TF_STATES_BUCKET_NAME} --output text --no-cli-pager 2>/dev/null | grep "$${AWS_DEFAULT_REGION}")) && aws s3 mb s3://$${TERRAFORM_TF_STATES_BUCKET_NAME} --region $${AWS_DEFAULT_REGION}
      # Run tests
      - make test-e2e
      # Cleanup
      - rm go1.23.2.tar.gz
      - rm awscliv2.zip
    environment:
      CGO_ENABLED: 0
      GOCACHE: /drone/src/.go/cache
      GOMODCACHE: /drone/src/.go/modcache
      GOTMPDIR: /drone/src/.go/tmp
      AWSCLI_VERSION: 2.15.17
      AWS_ACCESS_KEY_ID:
        from_secret: AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY:
        from_secret: AWS_SECRET_ACCESS_KEY
      AWS_DEFAULT_REGION:
        from_secret: AWS_REGION
      FURYCTL_MIXPANEL_TOKEN:
        from_secret: FURYCTL_MIXPANEL_TOKEN
      NETRC_FILE:
        from_secret: NETRC_FILE
      GITHUB_SSH:
        from_secret: GITHUB_SSH
      TERRAFORM_TF_STATES_BUCKET_NAME:
        from_secret: TERRAFORM_TF_STATES_BUCKET_NAME

  - name: build
    image: quay.io/sighup/golang:1.23.2
    pull: always
    depends_on:
      - lint
      - test-unit
      - test-integration
      - test-e2e
    commands:
      - git reset --hard
      - git fetch --tags
      - make build
    when:
      ref:
        exclude:
          - refs/tags/v**
    environment:
      CGO_ENABLED: 0
      GOCACHE: /drone/src/.go/cache
      GOMODCACHE: /drone/src/.go/modcache
      GOTMPDIR: /drone/src/.go/tmp
      FURYCTL_MIXPANEL_TOKEN:
        from_secret: FURYCTL_MIXPANEL_TOKEN
      GITHUB_TOKEN:
        from_secret: GITHUB_TOKEN

  - name: build-release
    image: quay.io/sighup/golang:1.23.2
    pull: always
    depends_on:
      - lint
      - test-unit
      - test-integration
      - test-e2e
    commands:
      - git reset --hard
      - git fetch --tags
      - make release
    when:
      ref:
        include:
          - refs/tags/v**
    environment:
      CGO_ENABLED: 0
      GOCACHE: /drone/src/.go/cache
      GOMODCACHE: /drone/src/.go/modcache
      GOTMPDIR: /drone/src/.go/tmp
      FURYCTL_MIXPANEL_TOKEN:
        from_secret: FURYCTL_MIXPANEL_TOKEN
      GITHUB_TOKEN:
        from_secret: GITHUB_TOKEN

trigger:
  event:
    exclude:
      - pull_request
      - promote
