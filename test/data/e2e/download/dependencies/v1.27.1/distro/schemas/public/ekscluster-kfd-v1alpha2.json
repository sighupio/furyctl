{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "description": "A Fury Cluster deployed through AWS's Elastic Kubernetes Service",
  "type": "object",
  "properties": {
    "apiVersion": {
      "type": "string",
      "pattern": "^kfd\\.sighup\\.io/v\\d+((alpha|beta)\\d+)?$"
    },
    "kind": {
      "type": "string",
      "enum": ["EKSCluster"]
    },
    "metadata": {
      "$ref": "#/$defs/Metadata"
    },
    "spec": {
      "$ref": "#/$defs/Spec"
    }
  },
  "additionalProperties": false,
  "required": ["apiVersion", "kind", "metadata", "spec"],
  "$defs": {
    "Metadata": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 19
        }
      },
      "required": ["name"]
    },
    "Spec": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "distributionVersion": {
          "type": "string",
          "minLength": 1
        },
        "region": {
          "$ref": "#/$defs/Types.AwsRegion"
        },
        "tags": {
          "$ref": "#/$defs/Types.AwsTags"
        },
        "toolsConfiguration": {
          "$ref": "#/$defs/Spec.ToolsConfiguration"
        },
        "infrastructure": {
          "$ref": "#/$defs/Spec.Infrastructure"
        },
        "kubernetes": {
          "$ref": "#/$defs/Spec.Kubernetes"
        },
        "distribution": {
          "$ref": "#/$defs/Spec.Distribution"
        },
        "plugins": {
          "$ref": "../public/spec-plugins.json"
        }
      },
      "required": [
        "distributionVersion",
        "region",
        "kubernetes",
        "distribution",
        "toolsConfiguration"
      ],
      "if": {
        "anyOf": [
          {
            "properties": {
              "infrastructure": {
                "type": "null"
              }
            }
          },
          {
            "properties": {
              "infrastructure": {
                "properties": {
                  "vpc": {
                    "type": "null"
                  }
                }
              }
            }
          }
        ]
      },
      "then": {
        "properties": {
          "kubernetes": {
            "required": ["vpcId", "subnetIds"]
          }
        }
      },
      "else": {
        "properties": {
          "kubernetes": {
            "type": "object",
            "properties": {
              "vpcId": {
                "type": "null"
              },
              "subnetIds": {
                "type": "null"
              }
            }
          }
        }
      }
    },
    "Spec.Distribution.CustomPatches": {
      "type": "object",
      "properties": {
        "configMapGenerator": {
          "$ref": "#/$defs/Spec.Distribution.CustomPatches.ConfigMapGenerator"
        },
        "secretGenerator": {
          "$ref": "#/$defs/Spec.Distribution.CustomPatches.SecretGenerator"
        },
        "patches": {
          "$ref": "#/$defs/Spec.Distribution.CustomPatches.Patches"
        },
        "patchesStrategicMerge": {
          "$ref": "#/$defs/Spec.Distribution.CustomPatches.PatchesStrategicMerge"
        }
      }
    },
    "Spec.Distribution.CustomPatches.ConfigMapGenerator": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/Spec.Distribution.CustomPatches.ResourceGenerator"
      }
    },
    "Spec.Distribution.CustomPatches.SecretGenerator": {
      "type": "array",
      "items": {
        "allOf": [
          {
            "$ref": "#/$defs/Spec.Distribution.CustomPatches.ResourceGenerator"
          }
        ],
        "properties": {
          "type": {
            "type": "string"
          }
        }
      }
    },
    "Spec.Distribution.CustomPatches.ResourceGenerator": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string"
        },
        "behavior": {
          "type": "string",
          "enum": ["create", "replace", "merge"]
        },
        "files": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "envs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "literals": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "namespace": {
          "type": "string"
        },
        "options": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "labels": {
              "$ref": "#/$defs/Types.KubeLabels"
            },
            "annotations": {
              "$ref": "#/$defs/Types.KubeLabels"
            },
            "disableNameSuffixHash": {
              "type": "boolean"
            },
            "immutable": {
              "type": "boolean"
            }
          }
        }
      },
      "required": ["name"]
    },
    "Spec.Distribution.CustomPatches.Patches": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/Spec.Distribution.CustomPatches.Patch"
      }
    },
    "Spec.Distribution.CustomPatches.PatchesStrategicMerge": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "Spec.Distribution.CustomPatches.Patch": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "target": {
          "$ref": "#/$defs/Spec.Distribution.CustomPatches.Patch.Target"
        },
        "options": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "allowNameChange": {
              "type": "boolean"
            },
            "allowKindChange": {
              "type": "boolean"
            }
          }
        },
        "path": {
          "type": "string"
        },
        "patch": {
          "type": "string"
        }
      },
      "oneOf": [
        {
          "required": ["path"]
        },
        {
          "required": ["patch"]
        }
      ]
    },
    "Spec.Distribution.CustomPatches.Patch.Target": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "group": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "labelSelector": {
          "type": "string"
        },
        "annotationSelector": {
          "type": "string"
        }
      }
    },
    "Spec.ToolsConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "terraform": {
          "$ref": "#/$defs/Spec.ToolsConfiguration.Terraform"
        }
      },
      "required": ["terraform"]
    },
    "Spec.ToolsConfiguration.Terraform": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "state": {
          "$ref": "#/$defs/Spec.ToolsConfiguration.Terraform.State"
        }
      },
      "required": ["state"]
    },
    "Spec.ToolsConfiguration.Terraform.State": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "s3": {
          "$ref": "#/$defs/Spec.ToolsConfiguration.Terraform.State.S3"
        }
      },
      "required": ["s3"]
    },
    "Spec.ToolsConfiguration.Terraform.State.S3": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "bucketName": {
          "$ref": "#/$defs/Types.AwsS3BucketName"
        },
        "keyPrefix": {
          "$ref": "#/$defs/Types.AwsS3KeyPrefix"
        },
        "region": {
          "$ref": "#/$defs/Types.AwsRegion"
        },
        "skipRegionValidation": {
          "type": "boolean"
        }
      },
      "required": ["bucketName", "keyPrefix", "region"]
    },

    "Spec.Infrastructure": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "vpc": {
          "$ref": "#/$defs/Spec.Infrastructure.Vpc"
        },
        "vpn": {
          "$ref": "#/$defs/Spec.Infrastructure.Vpn"
        }
      },
      "allOf": [
        {
          "if": {
            "allOf": [
              {
                "properties": {
                  "vpc": {
                    "type": "null"
                  }
                }
              },
              {
                "not": {
                  "properties": {
                    "vpn": {
                      "type": "null"
                    }
                  }
                }
              }
            ]
          },
          "then": {
            "properties": {
              "vpn": {
                "required": ["vpcId"]
              }
            }
          }
        },
        {
          "if": {
            "allOf": [
              {
                "not": {
                  "properties": {
                    "vpc": {
                      "type": "null"
                    }
                  }
                }
              },
              {
                "not": {
                  "properties": {
                    "vpn": {
                      "properties": {
                        "vpcId": {
                          "type": "null"
                        }
                      }
                    }
                  }
                }
              }
            ]
          },
          "then": {
            "properties": {
              "vpn": {
                "properties": {
                  "vpcId": {
                    "type": "null"
                  }
                }
              }
            }
          }
        }
      ]
    },
    "Spec.Infrastructure.Vpc": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "network": {
          "$ref": "#/$defs/Spec.Infrastructure.Vpc.Network"
        }
      },
      "required": ["network"]
    },
    "Spec.Infrastructure.Vpc.Network": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "cidr": {
          "$ref": "#/$defs/Types.Cidr"
        },
        "subnetsCidrs": {
          "$ref": "#/$defs/Spec.Infrastructure.Vpc.Network.SubnetsCidrs"
        }
      },
      "required": ["cidr", "subnetsCidrs"]
    },
    "Spec.Infrastructure.Vpc.Network.SubnetsCidrs": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "private": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Types.Cidr"
          }
        },
        "public": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Types.Cidr"
          }
        }
      },
      "required": ["private", "public"]
    },
    "Spec.Infrastructure.Vpn": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "instances": {
          "type": "integer"
        },
        "port": {
          "$ref": "#/$defs/Types.TcpPort"
        },
        "instanceType": {
          "type": "string"
        },
        "diskSize": {
          "type": "integer"
        },
        "operatorName": {
          "type": "string"
        },
        "dhParamsBits": {
          "type": "integer"
        },
        "vpnClientsSubnetCidr": {
          "$ref": "#/$defs/Types.Cidr"
        },
        "ssh": {
          "$ref": "#/$defs/Spec.Infrastructure.Vpn.Ssh"
        },
        "vpcId": {
          "$ref": "#/$defs/Types.AwsVpcId"
        },
        "bucketNamePrefix": {
          "$ref": "#/$defs/Types.AwsS3BucketNamePrefix"
        }
      },
      "required": ["ssh", "vpnClientsSubnetCidr"]
    },
    "Spec.Infrastructure.Vpn.Ssh": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "publicKeys": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/$defs/Types.SshPubKey"
              },
              {
                "$ref": "#/$defs/Types.FileRef"
              }
            ]
          }
        },
        "githubUsersName": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1
        },
        "allowedFromCidrs": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Types.Cidr"
          }
        }
      },
      "required": ["allowedFromCidrs", "githubUsersName"]
    },

    "Spec.Kubernetes": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "vpcId": {
          "$ref": "#/$defs/Types.AwsVpcId"
        },
        "subnetIds": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Types.AwsSubnetId"
          }
        },
        "apiServer": {
          "$ref": "#/$defs/Spec.Kubernetes.APIServer"
        },
        "serviceIpV4Cidr": {
          "$ref": "#/$defs/Types.Cidr"
        },
        "nodeAllowedSshPublicKey": {
          "anyOf": [
            {
              "$ref": "#/$defs/Types.AwsSshPubKey"
            },
            {
              "$ref": "#/$defs/Types.FileRef"
            }
          ]
        },
        "nodePoolsLaunchKind": {
          "type": "string",
          "enum": ["launch_configurations", "launch_templates", "both"]
        },
        "logRetentionDays": {
          "type": "integer"
        },
        "nodePools": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Spec.Kubernetes.NodePool"
          }
        },
        "awsAuth": {
          "$ref": "#/$defs/Spec.Kubernetes.AwsAuth"
        }
      },
      "required": [
        "apiServer",
        "nodeAllowedSshPublicKey",
        "nodePools",
        "nodePoolsLaunchKind"
      ]
    },
    "Spec.Kubernetes.APIServer": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "privateAccess": {
          "type": "boolean"
        },
        "privateAccessCidrs": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Types.Cidr"
          },
          "minItems": 0
        },
        "publicAccessCidrs": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Types.Cidr"
          },
          "minItems": 0
        },
        "publicAccess": {
          "type": "boolean"
        }
      },
      "required": ["privateAccess", "publicAccess"]
    },
    "Spec.Kubernetes.NodePool": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "eks-managed",
            "self-managed"
          ]
        },
        "name": {
          "type": "string"
        },
        "ami": {
          "$ref": "#/$defs/Spec.Kubernetes.NodePool.Ami"
        },
        "containerRuntime": {
          "type": "string",
          "enum": ["docker", "containerd"]
        },
        "size": {
          "$ref": "#/$defs/Spec.Kubernetes.NodePool.Size"
        },
        "instance": {
          "$ref": "#/$defs/Spec.Kubernetes.NodePool.Instance"
        },
        "attachedTargetGroups": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Types.AwsArn"
          }
        },
        "labels": {
          "$ref": "#/$defs/Types.KubeLabels"
        },
        "taints": {
          "$ref": "#/$defs/Types.KubeTaints"
        },
        "tags": {
          "$ref": "#/$defs/Types.AwsTags"
        },
        "subnetIds": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Types.AwsSubnetId"
          }
        },
        "additionalFirewallRules": {
          "$ref": "#/$defs/Spec.Kubernetes.NodePool.AdditionalFirewallRules"
        }
      },
      "required": ["instance", "name", "size"]
    },
    "Spec.Kubernetes.NodePool.Ami": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        }
      },
      "required": ["id", "owner"]
    },
    "Spec.Kubernetes.NodePool.Instance": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string"
        },
        "spot": {
          "type": "boolean"
        },
        "volumeSize": {
          "type": "integer"
        },
        "maxPods": {
          "type": "integer"
        }
      },
      "required": ["type"]
    },
    "Spec.Kubernetes.NodePool.Size": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "min": {
          "type": "integer",
          "minimum": 0
        },
        "max": {
          "type": "integer",
          "minimum": 0
        }
      },
      "required": ["max", "min"]
    },
    "Spec.Kubernetes.NodePool.AdditionalFirewallRules": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "cidrBlocks": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Spec.Kubernetes.NodePool.AdditionalFirewallRule.CidrBlock"
          },
          "minItems": 1
        },
        "sourceSecurityGroupId": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Spec.Kubernetes.NodePool.AdditionalFirewallRule.SourceSecurityGroupId"
          },
          "minItems": 1
        },
        "self": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Spec.Kubernetes.NodePool.AdditionalFirewallRule.Self"
          },
          "minItems": 1
        }
      }
    },
    "Spec.Kubernetes.NodePool.AdditionalFirewallRule.CidrBlock": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["ingress", "egress"]
        },
        "tags": {
          "$ref": "#/$defs/Types.AwsTags"
        },
        "cidrBlocks": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Types.Cidr"
          },
          "minItems": 1
        },
        "protocol": {
          "$ref": "#/$defs/Types.AwsIpProtocol"
        },
        "ports": {
          "$ref": "#/$defs/Spec.Kubernetes.NodePool.AdditionalFirewallRule.Ports"
        }
      },
      "required": ["cidrBlocks", "name", "ports", "protocol", "type"]
    },
    "Spec.Kubernetes.NodePool.AdditionalFirewallRule.SourceSecurityGroupId": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["ingress", "egress"]
        },
        "tags": {
          "$ref": "#/$defs/Types.AwsTags"
        },
        "sourceSecurityGroupId": {
          "type": "string"
        },
        "protocol": {
          "$ref": "#/$defs/Types.AwsIpProtocol"
        },
        "ports": {
          "$ref": "#/$defs/Spec.Kubernetes.NodePool.AdditionalFirewallRule.Ports"
        }
      },
      "required": ["sourceSecurityGroupId", "name", "ports", "protocol", "type"]
    },
    "Spec.Kubernetes.NodePool.AdditionalFirewallRule.Self": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["ingress", "egress"]
        },
        "tags": {
          "$ref": "#/$defs/Types.AwsTags"
        },
        "self": {
          "type": "boolean"
        },
        "protocol": {
          "$ref": "#/$defs/Types.AwsIpProtocol"
        },
        "ports": {
          "$ref": "#/$defs/Spec.Kubernetes.NodePool.AdditionalFirewallRule.Ports"
        }
      },
      "required": ["self", "name", "ports", "protocol", "type"]
    },
    "Spec.Kubernetes.NodePool.AdditionalFirewallRule.Ports": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "from": {
          "$ref": "#/$defs/Types.TcpPort"
        },
        "to": {
          "$ref": "#/$defs/Types.TcpPort"
        }
      },
      "required": ["from", "to"]
    },
    "Spec.Kubernetes.AwsAuth": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "additionalAccounts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Spec.Kubernetes.AwsAuth.User"
          }
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Spec.Kubernetes.AwsAuth.Role"
          }
        }
      }
    },
    "Spec.Kubernetes.AwsAuth.Role": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "username": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "rolearn": {
          "$ref": "#/$defs/Types.AwsArn"
        }
      },
      "required": ["groups", "rolearn", "username"]
    },
    "Spec.Kubernetes.AwsAuth.User": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "username": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "userarn": {
          "$ref": "#/$defs/Types.AwsArn"
        }
      },
      "required": ["groups", "userarn", "username"]
    },

    "Spec.Distribution": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "common": {
          "$ref": "#/$defs/Spec.Distribution.Common"
        },
        "modules": {
          "$ref": "#/$defs/Spec.Distribution.Modules"
        },
        "customPatches": {
          "$ref": "#/$defs/Spec.Distribution.CustomPatches"
        }
      },
      "required": ["modules"],
      "if": {
        "allOf": [
          {
            "required": ["common"]
          },
          {
            "properties": {
              "common": {
                "required": ["provider"]
              }
            }
          },
          {
            "properties": {
              "common": {
                "properties": {
                  "provider": {
                    "required": ["type"]
                  }
                }
              }
            }
          },
          {
            "properties": {
              "common": {
                "properties": {
                  "provider": {
                    "properties": {
                      "type": {
                        "const": "eks"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "then": {
        "properties": {
          "modules": {
            "required": ["aws"]
          }
        }
      },
      "else": {
        "properties": {
          "modules": {
            "properties": {
              "aws": {
                "type": "null"
              }
            }
          }
        }
      }
    },
    "Spec.Distribution.Common": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "nodeSelector": {
          "$ref": "#/$defs/Types.KubeNodeSelector"
        },
        "tolerations": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Types.KubeToleration"
          }
        },
        "provider": {
          "$ref": "#/$defs/Spec.Distribution.Common.Provider"
        },
        "relativeVendorPath": {
          "type": "string"
        }
      }
    },
    "Spec.Distribution.Common.Provider": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string"
        }
      },
      "required": ["type"]
    },
    "Spec.Distribution.Modules": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "auth": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Auth"
        },
        "aws": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Aws"
        },
        "dr": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Dr"
        },
        "ingress": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Ingress"
        },
        "logging": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Logging"
        },
        "monitoring": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Monitoring"
        },
        "tracing": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Tracing"
        },
        "networking": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Networking"
        },
        "policy": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Policy"
        }
      },
      "required": ["dr", "ingress", "logging", "policy"]
    },
    "Spec.Distribution.Modules.Ingress": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "overrides": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Ingress.Overrides"
        },
        "baseDomain": {
          "type": "string"
        },
        "nginx": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Ingress.Nginx"
        },
        "certManager": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Ingress.CertManager"
        },
        "dns": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Ingress.DNS"
        },
        "forecastle": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Ingress.Forecastle"
        }
      },
      "required": ["baseDomain", "dns", "nginx"],
      "if": {
        "properties": {
          "nginx": {
            "properties": {
              "tls": {
                "properties": {
                  "provider": {
                    "const": "certManager"
                  }
                }
              }
            }
          }
        }
      },
      "then": {
        "required": ["certManager"]
      }
    },
    "Spec.Distribution.Modules.Ingress.Overrides": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ingresses": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Ingress.Overrides.Ingresses"
        },
        "nodeSelector": {
          "$ref": "#/$defs/Types.KubeNodeSelector"
        },
        "tolerations": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Types.KubeToleration"
          }
        }
      }
    },
    "Spec.Distribution.Modules.Ingress.Overrides.Ingresses": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "forecastle": {
          "$ref": "#/$defs/Types.FuryModuleOverridesIngress"
        }
      }
    },
    "Spec.Distribution.Modules.Ingress.Forecastle": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "overrides": {
          "$ref": "#/$defs/Types.FuryModuleComponentOverrides"
        }
      }
    },
    "Spec.Distribution.Modules.Ingress.Nginx": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "enum": ["none", "single", "dual"]
        },
        "tls": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Ingress.Nginx.TLS"
        },
        "overrides": {
          "$ref": "#/$defs/Types.FuryModuleComponentOverrides"
        }
      },
      "required": ["type"]
    },
    "Spec.Distribution.Modules.Ingress.Nginx.TLS": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "provider": {
          "type": "string",
          "enum": ["certManager", "secret", "none"]
        },
        "secret": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Ingress.Nginx.TLS.Secret"
        }
      },
      "required": ["provider"],
      "if": {
        "properties": {
          "provider": {
            "const": "secret"
          }
        }
      },
      "then": {
        "required": ["secret"]
      }
    },
    "Spec.Distribution.Modules.Ingress.Nginx.TLS.Secret": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "cert": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "ca": {
          "type": "string"
        }
      },
      "required": ["ca", "cert", "key"]
    },
    "Spec.Distribution.Modules.Ingress.CertManager": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "clusterIssuer": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Ingress.CertManager.ClusterIssuer"
        },
        "overrides": {
          "$ref": "#/$defs/Types.FuryModuleComponentOverrides"
        }
      },
      "required": ["clusterIssuer"]
    },
    "Spec.Distribution.Modules.Ingress.CertManager.ClusterIssuer": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "type": {
          "type": "string",
          "enum": ["dns01", "http01"]
        },
        "solvers": {
          "type": "array"
        }
      },
      "required": ["name", "email"],
      "oneOf": [
        {
          "required": ["type"]
        },
        {
          "required": ["solvers"]
        }
      ]
    },
    "Spec.Distribution.Modules.Ingress.DNS": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "public": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Ingress.DNS.Public"
        },
        "private": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Ingress.DNS.Private"
        },
        "overrides": {
          "$ref": "#/$defs/Types.FuryModuleComponentOverrides"
        }
      },
      "required": ["public", "private"]
    },
    "Spec.Distribution.Modules.Ingress.DNS.Public": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string"
        },
        "create": {
          "type": "boolean"
        }
      },
      "required": ["name", "create"]
    },
    "Spec.Distribution.Modules.Ingress.DNS.Private": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string"
        },
        "create": {
          "type": "boolean"
        }
      },
      "required": ["name", "create"]
    },
    "Spec.Distribution.Modules.Logging": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "overrides": {
          "$ref": "#/$defs/Types.FuryModuleOverrides"
        },
        "type": {
          "type": "string",
          "enum": ["none", "opensearch", "loki"]
        },
        "opensearch": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Logging.Opensearch"
        },
        "loki": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Logging.Loki"
        },
        "cerebro": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Logging.Cerebro"
        },
        "minio": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Logging.Minio"
        },
        "operator": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Logging.Operator"
        }
      },
      "required": ["type"],
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "opensearch"
              }
            }
          },
          "then": {
            "required": ["opensearch"]
          }
        }
      ]
    },
    "Spec.Distribution.Modules.Logging.Opensearch": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "enum": ["single", "triple"]
        },
        "resources": {
          "$ref": "#/$defs/Types.KubeResources"
        },
        "storageSize": {
          "type": "string"
        },
        "overrides": {
          "$ref": "#/$defs/Types.FuryModuleComponentOverrides"
        }
      },
      "required": ["type"]
    },
    "Spec.Distribution.Modules.Logging.Cerebro": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "overrides": {
          "$ref": "#/$defs/Types.FuryModuleComponentOverrides"
        }
      }
    },
    "Spec.Distribution.Modules.Logging.Minio": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "storageSize": {
          "type": "string"
        },
        "rootUser" : {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "username": {
              "type": "string"
            },
            "password": {
              "type": "string"
            }
          }
        },
        "overrides": {
          "$ref": "#/$defs/Types.FuryModuleComponentOverrides"
        }
      }
    },
    "Spec.Distribution.Modules.Logging.Loki": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "backend": {
          "type": "string",
          "enum": ["minio", "externalEndpoint"]
        },
        "externalEndpoint" : {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "endpoint": {
              "type": "string"
            },
            "insecure": {
              "type": "boolean"
            },
            "secretAccessKey": {
              "type": "string"
            },
            "accessKeyId": {
              "type": "string"
            },
            "bucketName": {
              "type": "string"
            }
          }
        },
        "resources": {
          "$ref": "#/$defs/Types.KubeResources"
        }
      }
    },
    "Spec.Distribution.Modules.Logging.Operator": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "overrides": {
          "$ref": "#/$defs/Types.FuryModuleComponentOverrides"
        }
      }
    },
    "Spec.Distribution.Modules.Monitoring": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "enum": ["none", "prometheus", "mimir"]
        },
        "overrides": {
          "$ref": "#/$defs/Types.FuryModuleOverrides"
        },
        "prometheus": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Monitoring.Prometheus"
        },
        "alertmanager": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Monitoring.AlertManager"
        },
        "grafana": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Monitoring.Grafana"
        },
        "blackboxExporter": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Monitoring.BlackboxExporter"
        },
        "kubeStateMetrics": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Monitoring.KubeStateMetrics"
        },
        "x509Exporter": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Monitoring.X509Exporter"
        },
        "mimir": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Monitoring.Mimir"
        },
        "minio": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Monitoring.Minio"
        }
      },
      "required": ["type"]
    },
    "Spec.Distribution.Modules.Monitoring.Prometheus": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "resources": {
          "$ref": "#/$defs/Types.KubeResources"
        },
        "retentionTime": {
          "type": "string"
        },
        "retentionSize": {
          "type": "string"
        },
        "storageSize": {
          "type": "string"
        }
      }
    },
    "Spec.Distribution.Modules.Monitoring.AlertManager": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "deadManSwitchWebhookUrl": {
          "type": "string"
        },
        "slackWebhookUrl": {
          "type": "string"
        }
      }
    },
    "Spec.Distribution.Modules.Monitoring.Grafana": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "overrides": {
          "$ref": "#/$defs/Types.FuryModuleComponentOverrides"
        }
      }
    },
    "Spec.Distribution.Modules.Monitoring.BlackboxExporter": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "overrides": {
          "$ref": "#/$defs/Types.FuryModuleComponentOverrides"
        }
      }
    },
    "Spec.Distribution.Modules.Monitoring.KubeStateMetrics": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "overrides": {
          "$ref": "#/$defs/Types.FuryModuleComponentOverrides"
        }
      }
    },
    "Spec.Distribution.Modules.Monitoring.X509Exporter": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "overrides": {
          "$ref": "#/$defs/Types.FuryModuleComponentOverrides"
        }
      }
    },
    "Spec.Distribution.Modules.Monitoring.Mimir": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "retentionTime": {
          "type": "string"
        },
        "backend": {
          "type": "string",
          "enum": ["minio", "externalEndpoint"]
        },
        "externalEndpoint" : {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "endpoint": {
              "type": "string"
            },
            "insecure": {
              "type": "boolean"
            },
            "secretAccessKey": {
              "type": "string"
            },
            "accessKeyId": {
              "type": "string"
            },
            "bucketName": {
              "type": "string"
            }
          }
        },
        "overrides": {
          "$ref": "#/$defs/Types.FuryModuleComponentOverrides"
        }
      }
    },
    "Spec.Distribution.Modules.Monitoring.Minio": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "storageSize": {
          "type": "string"
        },
        "rootUser" : {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "username": {
              "type": "string"
            },
            "password": {
              "type": "string"
            }
          }
        },
        "overrides": {
          "$ref": "#/$defs/Types.FuryModuleComponentOverrides"
        }
      }
    },
    "Spec.Distribution.Modules.Tracing": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "overrides": {
          "$ref": "#/$defs/Types.FuryModuleOverrides"
        },
        "type": {
          "type": "string",
          "enum": ["none", "tempo"]
        },
        "tempo": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Tracing.Tempo"
        },
        "minio": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Tracing.Minio"
        }
      },
      "required": ["type"]
    },
    "Spec.Distribution.Modules.Tracing.Tempo": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "retentionTime": {
          "type": "string"
        },
        "backend": {
          "type": "string",
          "enum": ["minio", "externalEndpoint"]
        },
        "externalEndpoint" : {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "endpoint": {
              "type": "string"
            },
            "insecure": {
              "type": "boolean"
            },
            "secretAccessKey": {
              "type": "string"
            },
            "accessKeyId": {
              "type": "string"
            },
            "bucketName": {
              "type": "string"
            }
          }
        },
        "overrides": {
          "$ref": "#/$defs/Types.FuryModuleComponentOverrides"
        }
      }
    },
    "Spec.Distribution.Modules.Tracing.Minio": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "storageSize": {
          "type": "string"
        },
        "rootUser" : {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "username": {
              "type": "string"
            },
            "password": {
              "type": "string"
            }
          }
        },
        "overrides": {
          "$ref": "#/$defs/Types.FuryModuleComponentOverrides"
        }
      }
    },
    "Spec.Distribution.Modules.Networking": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "overrides": {
          "$ref": "#/$defs/Types.FuryModuleComponentOverrides"
        },
        "tigeraOperator": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Networking.TigeraOperator"
        }
      }
    },
    "Spec.Distribution.Modules.Networking.TigeraOperator": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "overrides": {
          "$ref": "#/$defs/Types.FuryModuleComponentOverrides"
        }
      }
    },
    "Spec.Distribution.Modules.Policy": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "overrides": {
          "$ref": "#/$defs/Types.FuryModuleOverrides"
        },
        "type": {
          "type": "string",
          "enum": ["none", "gatekeeper","kyverno"]
        },
        "gatekeeper": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Policy.Gatekeeper"
        },
        "kyverno": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Policy.Kyverno"
        }
      },
      "required": ["type"]
    },
    "Spec.Distribution.Modules.Policy.Gatekeeper": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "additionalExcludedNamespaces": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "overrides": {
          "$ref": "#/$defs/Types.FuryModuleComponentOverrides"
        }
      }
    },
    "Spec.Distribution.Modules.Policy.Kyverno": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "additionalExcludedNamespaces": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "overrides": {
          "$ref": "#/$defs/Types.FuryModuleComponentOverrides"
        }
      }
    },
    "Spec.Distribution.Modules.Dr": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "overrides": {
          "$ref": "#/$defs/Types.FuryModuleOverrides"
        },
        "type": {
          "type": "string",
          "enum": ["none", "eks"]
        },
        "velero": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Dr.Velero"
        }
      },
      "required": ["type"],
      "if": {
        "properties": {
          "type": {
            "const": "eks"
          }
        }
      },
      "then": {
        "required": ["type", "velero"]
      }
    },
    "Spec.Distribution.Modules.Dr.Velero": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "eks": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Dr.Velero.Eks"
        },
        "overrides": {
          "$ref": "#/$defs/Types.FuryModuleComponentOverrides"
        }
      },
      "required": ["eks"]
    },
    "Spec.Distribution.Modules.Dr.Velero.Eks": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "region": {
          "$ref": "#/$defs/Types.AwsRegion"
        },
        "bucketName": {
          "$ref": "#/$defs/Types.AwsS3BucketName",
          "maxLength": 49
        }
      },
      "required": ["region", "bucketName"]
    },
    "Spec.Distribution.Modules.Auth": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "overrides": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Auth.Overrides"
        },
        "provider": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Auth.Provider"
        },
        "baseDomain": {
          "type": "string"
        },
        "pomerium": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Auth.Pomerium"
        },
        "dex": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Auth.Dex"
        }
      },
      "required": ["provider"],
      "allOf": [
        {
          "if": {
            "properties": {
              "provider": {
                "properties": {
                  "type": {
                    "const": "sso"
                  }
                }
              }
            }
          },
          "then": {
            "required": ["dex", "pomerium", "baseDomain"]
          },
          "else": {
            "properties": {
              "dex": {
                "type": "null"
              },
              "pomerium": {
                "type": "null"
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "provider": {
                "properties": {
                  "type": {
                    "const": "basicAuth"
                  }
                }
              }
            }
          },
          "then": {
            "properties": {
              "provider": {
                "required": ["basicAuth"]
              }
            }
          },
          "else": {
            "properties": {
              "provider": {
                "basicAuth": {
                  "type": "null"
                }
              }
            }
          }
        }
      ]
    },
    "Spec.Distribution.Modules.Auth.Overrides": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "nodeSelector": {
          "$ref": "#/$defs/Types.KubeNodeSelector"
        },
        "tolerations": {
          "type": ["array", "null"],
          "items": {
            "$ref": "#/$defs/Types.KubeToleration"
          }
        },
        "ingresses": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/$defs/Spec.Distribution.Modules.Auth.Overrides.Ingress"
          }
        }
      }
    },
    "Spec.Distribution.Modules.Auth.Overrides.Ingress": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "host": {
          "type": "string"
        },
        "ingressClass": {
          "type": "string"
        }
      },
      "required": ["host", "ingressClass"]
    },
    "Spec.Distribution.Modules.Auth.Provider": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "enum": ["none", "basicAuth", "sso"]
        },
        "basicAuth": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Auth.Provider.BasicAuth"
        }
      },
      "required": ["type"]
    },
    "Spec.Distribution.Modules.Auth.Provider.BasicAuth": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "required": ["username", "password"]
    },
    "Spec.Distribution.Modules.Auth.Pomerium": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "secrets": {
          "$ref": "#/$defs/Spec.Distribution.Modules.Auth.Pomerium.Secrets"
        },
        "policy": {
          "type": "string"
        },
        "overrides": {
          "$ref": "#/$defs/Types.FuryModuleComponentOverrides"
        }
      },
      "required": ["secrets", "policy"]
    },
    "Spec.Distribution.Modules.Auth.Pomerium.Secrets": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "COOKIE_SECRET": {
          "type": "string"
        },
        "IDP_CLIENT_SECRET": {
          "type": "string"
        },
        "SHARED_SECRET": {
          "type": "string"
        }
      },
      "required": ["COOKIE_SECRET", "IDP_CLIENT_SECRET", "SHARED_SECRET"]
    },
    "Spec.Distribution.Modules.Auth.Dex": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "connectors": {
          "type": "array"
        },
        "overrides": {
          "$ref": "#/$defs/Types.FuryModuleComponentOverrides"
        }
      },
      "required": ["connectors"]
    },
    "Spec.Distribution.Modules.Aws": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "clusterAutoscaler": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "overrides": {
              "$ref": "#/$defs/Types.FuryModuleComponentOverrides"
            }
          }
        },
        "ebsCsiDriver": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "overrides": {
              "$ref": "#/$defs/Types.FuryModuleComponentOverrides"
            }
          }
        },
        "loadBalancerController": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "overrides": {
              "$ref": "#/$defs/Types.FuryModuleComponentOverrides"
            }
          }
        },
        "ebsSnapshotController": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "overrides": {
              "$ref": "#/$defs/Types.FuryModuleComponentOverrides"
            }
          }
        },
        "overrides": {
          "$ref": "#/$defs/Types.FuryModuleOverrides"
        }
      }
    },

    "Types.SemVer": {
      "type": "string",
      "pattern": "^v?(?P<major>0|[1-9]\\d*)\\.(?P<minor>0|[1-9]\\d*)\\.(?P<patch>0|[1-9]\\d*)(?:-(?P<prerelease>(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+(?P<buildmetadata>[0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
    },
    "Types.IpAddress": {
      "type": "string",
      "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)\\.?\b){4}$"
    },
    "Types.Cidr": {
      "type": "string",
      "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)\\.?\\b){4}\\/(3[0-2]|[1-2][0-9]|[0-9])$"
    },
    "Types.FileRef": {
      "type": "string",
      "pattern": "^\\{file\\:\\/\\/.+\\}$"
    },
    "Types.EnvRef": {
      "type": "string",
      "pattern": "\\{^env\\:\\/\\/.*\\}$"
    },
    "Types.TcpPort": {
      "type": "integer",
      "minimum": 1,
      "maximum": 65535
    },
    "Types.SshPubKey": {
      "type": "string",
      "pattern": "^ssh\\-(dsa|ecdsa|ecdsa-sk|ed25519|ed25519-sk|rsa)\\s+"
    },
    "Types.Uri": {
      "type": "string",
      "pattern": "^(http|https)\\:\\/\\/.+$"
    },
    "Types.AwsArn": {
      "type": "string",
      "pattern": "^arn:(?P<Partition>[^:\\n]*):(?P<Service>[^:\\n]*):(?P<Region>[^:\\n]*):(?P<AccountID>[^:\\n]*):(?P<Ignore>(?P<ResourceType>[^:\\/\\n]*)[:\\/])?(?P<Resource>.*)$"
    },
    "Types.AwsRegion": {
      "type": "string",
      "enum": [
        "af-south-1",
        "ap-east-1",
        "ap-northeast-1",
        "ap-northeast-2",
        "ap-northeast-3",
        "ap-south-1",
        "ap-south-2",
        "ap-southeast-1",
        "ap-southeast-2",
        "ap-southeast-3",
        "ap-southeast-4",
        "ca-central-1",
        "eu-central-1",
        "eu-central-2",
        "eu-north-1",
        "eu-south-1",
        "eu-south-2",
        "eu-west-1",
        "eu-west-2",
        "eu-west-3",
        "me-central-1",
        "me-south-1",
        "sa-east-1",
        "us-east-1",
        "us-east-2",
        "us-gov-east-1",
        "us-gov-west-1",
        "us-west-1",
        "us-west-2"
      ]
    },
    "Types.AwsVpcId": {
      "type": "string",
      "pattern": "^vpc\\-([0-9a-f]{8}|[0-9a-f]{17})$"
    },
    "Types.AwsSshPubKey": {
      "type": "string",
      "pattern": "^ssh\\-(ed25519|rsa)\\s+"
    },
    "Types.AwsSubnetId": {
      "type": "string",
      "pattern": "^subnet\\-[0-9a-f]{17}$"
    },
    "Types.AwsTags": {
      "type": "object",
      "additionalProperties": { "type": "string" }
    },
    "Types.AwsIpProtocol": {
      "type": "string",
      "pattern": "^(?i)(tcp|udp|icmp|icmpv6|-1)$",
      "$comment": "this value should be lowercase, but we rely on terraform to do the conversion to make it a bit more user friendly"
    },
    "Types.AwsS3BucketName": {
      "type": "string",
      "allOf": [
        {
          "pattern": "^[a-z0-9][a-z0-9-.]{1,61}[a-z0-9]$"
        },
        {
          "not": {
            "pattern": "^xn--|-s3alias$"
          }
        }
      ]
    },
    "Types.AwsS3BucketNamePrefix": {
      "type": "string",
      "allOf": [
        {
          "pattern": "^[a-z0-9][a-z0-9-.]{1,35}[a-z0-9-.]$"
        },
        {
          "not": {
            "pattern": "^xn--|-s3alias$"
          }
        }
      ]
    },
    "Types.AwsS3KeyPrefix": {
      "type": "string",
      "pattern": "^[A-z0-9][A-z0-9!-_.*'()]+$",
      "maxLength": 960
    },
    "Types.KubeLabels": {
      "type": "object",
      "additionalProperties": { "type": "string" }
    },
    "Types.KubeTaints": {
      "type": "array",
        "items": {
           "type": "string",
           "pattern": "^([a-zA-Z0-9\\-\\.\\/]+)=([^-][\\w-]+):(NoSchedule|PreferNoSchedule|NoExecute)$"
        }
    },
    "Types.KubeNodeSelector": {
      "type": ["object", "null"],
      "additionalProperties": { "type": "string" }
    },
    "Types.KubeToleration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "effect": {
          "type": "string",
          "enum": ["NoSchedule", "PreferNoSchedule", "NoExecute"]
        },
        "operator": {
          "type": "string",
          "enum": ["Exists", "Equal"]
        },
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "required": ["effect", "key", "value"]
    },
    "Types.KubeResources": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "requests": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "cpu": {
              "type": "string"
            },
            "memory": {
              "type": "string"
            }
          }
        },
        "limits": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "cpu": {
              "type": "string"
            },
            "memory": {
              "type": "string"
            }
          }
        }
      }
    },
    "Types.FuryModuleOverrides": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "nodeSelector": {
          "$ref": "#/$defs/Types.KubeNodeSelector"
        },
        "tolerations": {
          "type": ["array", "null"],
          "items": {
            "$ref": "#/$defs/Types.KubeToleration"
          }
        },
        "ingresses": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/$defs/Types.FuryModuleOverridesIngress"
          }
        }
      }
    },
    "Types.FuryModuleComponentOverrides": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "nodeSelector": {
          "$ref": "#/$defs/Types.KubeNodeSelector"
        },
        "tolerations": {
          "type": ["array", "null"],
          "items": {
            "$ref": "#/$defs/Types.KubeToleration"
          }
        }
      }
    },
    "Types.FuryModuleOverridesIngress": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "disableAuth": {
          "type": "boolean"
        },
        "host": {
          "type": "string"
        },
        "ingressClass": {
          "type": "string"
        }
      }
    }
  }
}
